package com.havrilyk.twentymethods;


import org.springframework.boot.autoconfigure.SpringBootApplication;

import java.util.Arrays;

@SpringBootApplication
public class TwentyMethodsApplication {

    public static void main(String[] args) {
        //1 —Ä–æ–±–∏–ª–∞ –ê–Ω–∞—Å—Ç–∞—Å—ñ—è
        char[] testArray = {'A', 'B', 'C'};
        charArray(testArray);

        //2
        int[] arrayTask2 = {1, 2, 3, 4, 5};
        intToChar(arrayTask2);

        //3
        int a = 10;
        int b = 20;
        maxOfTwoNumerics(a, b);

        //4
        int x = 30;
        int y = 40;
        int c = 50;
        maxOfThreeNumerics(x, y, c);

        //5
        int one = 60;
        int two = 70;
        int three = 80;
        int four = 90;
        int five = 100;
        maxOfFiveNumerics(one, two, three, four, five);

        //6
        char[] string = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'};
        charToString(string);

        //8
        int[] array8 = {10, 20, 60, 40, 50, 80, 30, 90};
        int num8 = 2;
        valueArray(array8, num8);

        //9
        int[] array9 = {10, 20, 60, 40, 50, 80, 30, 90};
        int num9 = 20;
        indexArray(array9, num9);

        //10
        int n = 4;
        factorialNumber(n);

        //11
        int year = 2024;
//        intercalaryYear(year);
        System.out.println(intercalaryYear(year));

        //12
        int[] array12 = {10, 20, 60, 40, 50, 80, 30, 90};
        int num12 = 3;
        multiplesNum(array12, num12);


        //13
        int[] arrayForSort = {60, 20, 10, 40, 30, 50};
        bubbleSort(arrayForSort);

        //14
        byte[] array14 = {1, 2, 3, 4, 5, 6, 7};
        System.out.println("Task 14 = " + byteArray(array14));

        //15
        int[] array1 = {10, 20, 30, 40, 50};
        int[] array2 = {2, 3, 4, 5, 6};
        multiplyArray(array1, array2);

        //16
        int[] array3 = {7, 2, 3, 8, 5, 9};
        int[] array4 = {1, 2, 3, 4, 5, 6};
        notSimilar(array3, array4);

        // 17
        int[] array17 = {1, 2, 3, 4, 5, 6, 7};
        reversArray(array17);

        //18
        int sizeArray = 10;
        int minLimit = 2;
        int maxLimit = 8;
        randomArrayInt(sizeArray, minLimit, maxLimit);

        //19
        char[] string1 = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'};
        char[] string2 = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'};
        checkArraySimilarity(string1, string2);
    }


    public static void charArray(char[] array) {
        for (char c : array) {
            System.out.print(c + " ");
        }
        System.out.println();
    }

    public static char[] intToChar(int [] array) {
        System.out.print("Task 2 == ");
        char[] arrayChar = new char[array.length];
        for (int i = 0; i < array.length; i++) {
            arrayChar[i] = (char) array[i];
            System.out.print(arrayChar);
        }
        System.out.println();
        return arrayChar;
    }

    public static int maxOfTwoNumerics(int a, int b) {
        int max = a > b ? a : b;
//        System.out.println("task 3 = " + max);

        return max;
//        if (a > b) {
//            System.out.println("task 3 = " + a);
//        } else {
//            System.out.println("task 3 = " + b);
//        }
//        return a;
    }

    public static int maxOfThreeNumerics(int x, int y, int c) {
        int max = maxOfTwoNumerics(x, y) > c ? maxOfTwoNumerics(x, y) : c;
//        System.out.println("task 4 = " + max);
        return max;

//        if (x > y) {
//            System.out.println("Task 4 = " + x);
//        } else if (y > c) {
//            System.out.println("Task 4 = " + y);
//        } else if (c > y) {
//            System.out.println("Task 4 = " + c);
//        }
    }

    public static int maxOfFiveNumerics(int one, int two, int three, int four, int five) {
        int max1 = maxOfTwoNumerics(one, two);
        int max2 = maxOfThreeNumerics(three, four, five);
        int result = max1 > max2 ? max1 : max2;

        System.out.println("Task 5 = " + result);

        return result;
    }

    public static String charToString(char[] string) {
//        System.out.print("Task 6 = ");
        System.out.print("Task 6 = ");
        StringBuilder result = new StringBuilder();
        for (char c : string) {
            result.append(c);
        }
        System.out.println(result);
        return result.toString();
    }

    public static void valueArray(int[] array8, int num8) {
        System.out.print("Task 8 = ");
        for (int i = 0; i < array8.length; i++) {
            if (i == num8) {
                System.out.println(i);
                return;
            }
        }
        System.out.println("Value = -1");
    }

    public static void indexArray(int[] array9, int num9) {
        System.out.print("Task 9 = ");
        for (int i = array9.length - 1; i >= 0 ; i--) {
            if (array9[i] == num9) {
                System.out.println(i);
                return;
            }
        }
        System.out.println("Value = -1");
    }

    public static int factorialNumber(int n) {
        System.out.print("Task 10 = ");
        int result = 1;
        for (int i = 1; i <= n; i++) {
            result = result * i;

        }
        System.out.println(result);
        return result;
    }

    public static boolean intercalaryYear(int year) {
        System.out.print("Task 11 = " + year + " ");
        if (year % 4 == 0) {
            return true;
        } else if (year % 100 == 0) {
            return true;
        } else if (year % 400 == 0) {
            return true;
        } else{
            return  false;
        }
    }

    public static void bubbleSort(int[] array) {
        System.out.print("Task 13 = ");
        int repeated = 0;
        boolean changeHappened = true;

        while (changeHappened) {
            changeHappened = false;

            for (int i = 0; i < array.length - 1 - repeated; i++) {

                if (array[i] > array[i + 1]) {
                    int tmp = array[i];
                    array[i] = array[i + 1];
                    array[i + 1] = tmp;
                    changeHappened = true;
                }
            }
            repeated++;

        }
        for (int i : array) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    public static int multiplesNum(int[] array12, int num12) {
        System.out.print("Task 12 = ");
        int mulNum = 0;
        for (int j : array12) {
            if (j % num12 == 0) {
                mulNum = j;
                System.out.print(mulNum + " ");
            }
        }
        System.out.println();
        return mulNum;
    }

    public static boolean byteArray(byte[] array14) {

        for (int i = 0; i < array14.length - 1; i++) {
            for (int j = i + 1; j < array14.length; j++) {
                if (array14[i] == array14[j]) {
                    return true;
                }
            }
        }
        return false;
    }

    public static int [] multiplyArray(int[] array1, int[] array2) {
        System.out.print("Task 15 = ");
        int[] result = new int[array1.length];
        for (int i = 0; i < array1.length; i++) {
            result[i] = array1[i] * array2[i];
        }
//        System.out.println(Arrays.toString(result));
        System.out.println(Arrays.toString(result));
        return result;

    }

    public static void notSimilar(int[] array3, int[] array4) {
        System.out.print("Task 16 = ");
        int[] resultSimilar = new int[array3.length];
        for (int i = 0; i < array3.length; i++) {
            if (array3[i] != array4[i]) {
                resultSimilar[i] = array3[i];
            }
//            System.out.print(resultSimilar[i] + " ");
        }

        for (int i = 0; i < array3.length; i++) {
            if (array3[i] != array4[i]) {
                resultSimilar[i] = array4[i];
            }
//            System.out.print(resultSimilar[i] + " ");
        }
        System.out.println(Arrays.toString(resultSimilar));

    }

    public static void reversArray(int[] array17) {
        System.out.print("Task 17 = ");
        for (int i = 0; i < array17.length / 2; i++) {
            int temp = array17[i];
            array17[i] = array17[array17.length - 1 - i];
            array17[array17.length - 1 - i] = temp;
        }
        System.out.println(Arrays.toString(array17));
    }

    public static int [] randomArrayInt(int sizeArray, int minLimit, int maxLimit) {
        System.out.print("Tack 18 = ");
        int[] randomArray = new int[sizeArray];
        for (int i = 0; i < randomArray.length; i++) {
            int valueRandom = (int) (Math.random() * (maxLimit - minLimit + 1) + minLimit);
            randomArray[i] = valueRandom;

            System.out.print(randomArray[i] + " ");
        }
        System.out.println();
        return randomArray;
    }

    public static void checkArraySimilarity(char[] string1, char[] string2) {
        System.out.print("Task 19 = ");
        boolean arraySimilar = true;

        if (string1.length != string2.length) {
            arraySimilar = false;
        } else {
            for (int i = 0; i < string1.length; i++) {
                if (string1[i] != string2[i]) {
                    arraySimilar = false;
                    break;
                }
            }
        }
         System.out.println(arraySimilar);
    }




    //‚úÖ1) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∞—Ä–æ–≤, –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω
    //ü§∑‚Äç‚ôÇÔ∏è2) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∞—Ä–æ–≤, –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ –ø–æ–∑–∏—Ü–∏–∏ –º–∞—Å—Å–∏–≤–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–¥—É —Å–∏–º–≤–æ–ª–∞ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –∏–Ω—Ç–∞
    //‚úÖ3) –ø—Ä–∏–º–∏–Ω–∞–µ—Ç 2 –∏–Ω—Ç–∞, –∞ –∏ –±, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ–ª—å—à–µ–µ –∏—Ö —ç—Ç–∏—Ö 2—Ö —á–∏—Å–µ–ª
    //‚úÖ4)–ø—Ä–∏–Ω–∏–º–∞–µ—Ç 3–∏–Ω—Ç–∞,–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ–ª—å—à–µ–µ –∏–∑ –Ω–∏—Ö
    //‚úÖ5) –ø—Ä–∏–º–∏–Ω–∞–µ—Ç 5 –∏–Ω—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ–ª—å—à–µ–µ –∏–∑ –Ω–∏—Ö
    //‚úÖ6) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∞—Ä–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ –º–∞—Å—Å–∏–≤–∞ (symbols.toString)
    //‚úÖ8) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤, –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏–Ω—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–º,
    //–Ω–∞—á–∏–Ω–∞—è —Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1
    //‚úÖ9) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤, –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏–Ω—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    //—Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–º, –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1
    //‚úÖ10) –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–Ω—Ç, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –æ—Ç –∑–∞–¥–∞–Ω–æ–≥–æ –∏–Ω—Ç–∞
    //‚úÖ11.–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–Ω—Ç –≥–æ–¥, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç—Ä—É –µ—Å–ª–∏ –≥–æ–¥ –≤—ã—Å–æ–∫–æ—Å–Ω—ã–π.–†—ñ–∫ –≤–≤–∞–∂–∞—î—Ç—å—Å—è –≤–∏—Å–æ–∫–æ—Å–Ω–∏–º, —è–∫—â–æ –≤—ñ–Ω –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ 4.
    // –í–∏–Ω—è—Ç–∫–æ–º —î —Ä–æ–∫–∏, —è–∫—ñ –∫—Ä–∞—Ç–Ω—ñ 100 (—Ç–∞–∫—ñ —Ä–æ–∫–∏ —î –≤–∏—Å–æ–∫–æ—Å–Ω–∏–º–∏ —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ, —è–∫—â–æ –≤–æ–Ω–∏ —â–µ –¥—ñ–ª—è—Ç—å—Å—è –Ω–∞ 400).
    //‚úÖ12) –ø—Ä–∏–º–∏–Ω–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤ –∏ —á–∏—Å–ª–æ, –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –µ–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –µ–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –∫—Ä–∞—Ç–Ω—ã —ç—Ç–æ–º—É —á–∏—Å–ª—É
    //‚úÖ13) –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –µ–≥–æ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
    //‚úÖ14) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –±–∞–π—Ç, –µ—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –µ–ª–µ–º–µ–Ω—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç—Ä—É
    //‚úÖ15) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –∏–Ω—Ç–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–æ –¥–ª–∏–Ω–Ω–µ, –≤–æ–∑—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø–µ—Ä–µ–º–Ω–æ–∂–µ–Ω–Ω—ã—Ö –µ–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥—è—â–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤
    //ü§∑‚Äç‚ôÇÔ∏è16) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –∏–Ω—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ –µ–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –≤ –º–∞—Å—Å–∏–≤–∞—Ö
    //‚úÖ17)–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å–∏–≤ –∏–Ω—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∂–µ –Ω–æ –≤ —Ä–µ–≤–µ—Ä—Å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    //‚úÖÔ∏è18)–ø—Ä–∏–Ω–∏–º–∞–µ—Ç 3 –∏–Ω—Ç–∞: -—Ä–∞–∑–º–µ—Ä –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, -–Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞, -–≤–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
    // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–Ω—Ç–æ–≤ –∑–∞–¥–∞–Ω–æ–π –¥–ª–∏–Ω–Ω—ã–π,–∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã –¥–æ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã"
    //‚úÖ19)–ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 –º–∞—Å—Å–∏–≤–∞ —á–∞—Ä–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ 1 –º–∞—Å—Å–∏–≤–µ, —Ç–∞–∫–∞—è –∂–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤ –∫–æ—Ç–æ—Ä—É—é
    // –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –≤—Ç–æ—Ä–æ–π –º–∞—Å—Å–∏–≤.–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–ª–µ–∞–Ω

}
